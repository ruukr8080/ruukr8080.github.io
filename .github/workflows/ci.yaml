name: Deploy Quartz site to GitHub Pages

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    if: ${{ github.repository == 'ruukr8080/ruukr8080.github.io' }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          
      - name: Upgrade npm
        shell: bash
        run: |
          npm install -g npm@10.8.3
          npm --version
          
      - name: Install dependencies
        shell: bash
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json
          npm install

      - name: Check types and style
        shell: bash
        run: npm run check
        
      - name: Build Quartz
        shell: bash
        run: |
          npx quartz build --bundleInfo
          ls -la public/

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

  publish-tag:
    if: ${{ github.repository == 'ruukr8080/ruukr8080.github.io' && github.ref == 'refs/heads/v4' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          
      - name: Upgrade npm
        run: npm install -g npm@10.8.3
      
      - name: Get package version
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_ENV
      
      - name: Create release tag
        uses: pkgdeps/git-tag-action@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          version: ${{ env.PACKAGE_VERSION }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"